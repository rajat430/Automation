{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername":
            {
            "type": "string",
            "defaultValue": "winadmin",
            "metadata": {
                "description": "Administrator username for the Virtual Machine."}
            },
        "adminPassword":
             {
            "type": "securestring",
            "metadata": {"description": "Password for the Virtual Machine.Should contain any 3 of: 1 Lower Case, 1 Upper Case, 1 Number and 1 Special character."}
            },
        "osVersion":
            {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "allowedValues" : [ "2016-Datacenter","2012-R2-Datacenter", "2012-Datacenter","2008-R2-SP1"],
            "metadata": 
                { "description": "The Windows version for the VM. Please review the Supported OS Versions page at: https://confluence.csc.com/display/CSA/Supported+OS+Versions" }
                },
        "vmName": 
            {
            "type": "string",
            "maxLength": 15,
            "metadata": {"description": "The VM name in lower case, maximum 15-character size containing Data Center site code, Environment(bv), Resource Type(poc), Deployment(wvm) and Sequence(001), i.e. bvpoctstwvm001"}
            },
        "vmSize": 
            {
            "type": "string",
            "defaultValue": "",
            "allowedValues" : [ "Standard_E2s_v3","Standard_E4s_v3","Standard_E8s_v3","Standard_E16s_v3","Standard_E20s_v3","Standard_E32s_v3","Standard_E64s_v3","Standard_M64s","Standard_M64ms","Standard_M128s","Standard_M128ms"],
            "metadata": 
                {
                "description": "The size(T-shirt) for the VM. StandardE2s_v3 (2 vCpus / 16Gb / Max Data Disks : 4) - StandardE4s_v3 (4 vCpus / 32Gb / Max Data Disks : 8) - StandardE8s_v3 (8 vCpus / 64Gb / Max Data Disks : 16) - StandardE16s_v3 (16 vCpus / 128Gb / Max Data Disks : 32) - StandardE20s_v3 (20 vCpus / 160Gb / Max Data Disks : 32) - StandardE32s_v3 (32 vCpus / 256Gb / Max Data Disks : 32) - StandardE64s_v3 (64 vCpus / 432Gb / Max Data Disks : 32) - StandardM64s (64 vCpus / 1024Gb / Max Data Disks : 64) - StandardM64ms (64 vCpus / 1792Gb / Max Data Disks : 64) - StandardM128s (128 vCpus / 2048Gb / Max Data Disks : 64) - StandardM128ms (128 vCpus / 3892Gb / Max Data Disks : 64)",
                "SNC::Parameter::Metadata": {"referenceType": "Microsoft.Compute/virtualMachines/vmSize"}
                }
            },
        "vmLocation": 
            {
            "type": "string",
            "allowedValues" : [ "westeurope","eastus2","northeurope","centralus","eastus"],
            "metadata": 
                {
                "description": "Location or datacenter where the VM will be placed.",
                "SNC::Parameter::Metadata": {"referenceType": "Microsoft.Azure/region"}
                }
            },
	"storageAccountType": 
	    {
            "type": "string",
        "defaultValue": "Premium_LRS",
        "allowedValues" : [ "Premium_LRS","StandardSSD_LRS","Standard_LRS"],
        "metadata": {"description": "StorageAccountType : Premium_LRS : Premium SSD Disks (Pxx), StandardSSD_LRS : Standard SSD Disks (Exx) , Standard_LRS : Standard HDD Disks (Sxx)"}
        },
	"sizeOfOSDiskInGB": 
			{
            "type": "string",
            "defaultValue": "128",
            "allowedValues" : [ "32","64","128","256","512","1024","2048","4096"],
            "metadata": {"description": "The OS Disk size for the VM in GBs."}
            },
        "sizeOfDiskInGB": 
            {
            "type": "string",
            "defaultValue": "256",
            "allowedValues" : [ "32","64","128","256","512","1024","2048","4096","8192","16384","32767"],
            "metadata": {"description": "The Data Disk size for the VM in GBs."}
            },
        "existingvNetResourceGroup": 
            {
            "type": "string",
            "metadata": 
                {
                "description": "Resource Group of the Existing Virtual Network.",
                "SNC::Parameter::Metadata": {"referenceType": "Microsoft.Resources/resourceGroups"}
                }
            },
        "existingvNetName": 
            {
            "type": "string",
            "metadata": 
                {
                "description": "Existing Virtual Network to connect to Network Interface to.It should be at the same location as the VM.",
                "SNC::Parameter::Metadata": {"referenceType": "Microsoft.Network/virtualNetworks"}
                }
            },
        "subnetName": 
            {
            "type": "string",
            "metadata": 
                {
                "description": "The Subnet for the VM.",
                "SNC::Parameter::Metadata": {"referenceType": "Microsoft.Network/subNets"}
                }
            },
        "publicIPRequired": 
            {
            "type": "string",
            "defaultValue": "no",
            "allowedValues" : [ "no","yes"],
            "metadata": {"description": "Does this VM needs a public IP? (yes/no)"}
            },
		"privateIPAddress": {
			"type": "string",
			"metadata": { "description": "Static Private IP will be assigned to the machine" }
			}
        },

    "functions": [],
    "variables": {
        "subscription_name": "[subscription().displayName]",
        "Publicip_name": "[concat(parameters('vmName'),'-pubip1')]",
        "nsg_name": "[concat(parameters('vmName'),'-nsg1')]",
        "Vnic_name": "[concat(parameters('vmName'),'-vnic1')]",
        "osDisk": "[concat(parameters('vmName'),'-osDisk')]",
        "dataDisk": "[concat(parameters('vmName'),'-dataDisk1')]",
        "SubnetID": "[concat('/subscriptions/d53c0dd5-dc5b-41fb-9e3c-327d1fc8e5b6/resourceGroups/',parameters('existingvNetResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',trim(parameters('existingvNetName')),'/subnets/',trim(parameters('subnetName')))]",
        "vnetID": "[concat('/subscriptions/',trim(variables('subscription_name')),'/resourceGroups/',parameters('existingvNetResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('existingvNetName'))]",
        "location": "[parameters('vmLocation')]"
    },
    "resources": [
{
    "condition":"[equals(parameters('publicIPRequired'),'yes')]",
    "name": "[variables('Publicip_name')]",
    "type": "Microsoft.Network/publicIPAddresses",
    "apiVersion": "2019-11-01",
    "location": "[variables('location')]",
    "properties": {
        "publicIPAllocationMethod": "Dynamic"
    }
},
{
    "name": "[variables('nsg_name')]",
    "type": "Microsoft.Network/networkSecurityGroups",
    "apiVersion": "2018-08-01",
    "location": "[variables('location')]",
    "properties": {
        "securityRules": [
            {
                "name": "nsgRule1",
                "properties": {
                    "description": "description",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "3389",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 100,
                    "direction": "Inbound"
                }
            }
        ]
    }
},
{
    "name": "[variables('Vnic_name')]",
    "type": "Microsoft.Network/networkInterfaces",
    "apiVersion": "2019-11-01",
    "location": "[variables('location')]",
    "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('Publicip_name'))]"
    ],

    "properties": {
        "ipConfigurations": [
            {
                "name": "ipConfig1",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[parameters('privateIPAddress')]",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('Publicip_name'))]"
                    },
                    "subnet": {
                        "id": "[variables('SubnetID')]"
                    }
                }
            }
        ]
    }
},
{
    "name": "[parameters('vmName')]",
    "type": "Microsoft.Compute/virtualMachines",
    "apiVersion": "2019-07-01",
    "location": "[variables('location')]",
    "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('Vnic_name'))]"
    ],
    "properties": {
        "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
            
        },
        "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
            "imageReference": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "[parameters('osVersion')]",
                "version": "latest"
            },
            "osDisk": {
                "name": "[variables('osDisk')]",
                "caching": "ReadWrite",
                "createOption": "FromImage",
                "diskSizeGB": "[parameters('sizeOfOSDiskInGB')]",
                "managedDisk": {
                    "storageAccountType":"[parameters('storageAccountType')]"
                }
            },
            "dataDisks": [
                {
                    "lun":1,
                    "name": "[variables('dataDisk')]",
                    "diskSizeGB":"[parameters('sizeOfDiskInGB')]",
                    "createOption": "Empty",
                    "caching": "ReadOnly",
                    "managedDisk": {
                        "storageAccountType":"[parameters('storageAccountType')]"
                    }
                }
            ]
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('Vnic_name'))]"
                }
            ]
        }
    }
}
    ],
    "outputs": {}
}
